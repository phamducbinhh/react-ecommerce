{"version":3,"file":"static/js/519.d8930070.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Spinner.js","Components/Loading/LoadingBox.js","Components/Loading/LoadingSpinner.js","Components/button/Button.js","Components/field/Field.js","Components/input/Input.js","Components/label/Label.js","Layout/Heading.js","Reducer/reducerUpdate.js","Screen/ProfileScreen.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation,\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import Spinner from \"react-bootstrap/Spinner\";\r\n\r\nexport default function LoadingBox() {\r\n  return (\r\n    <Spinner animation=\"border\" role=\"status\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst LoadingStyles = styled.div`\r\n  width: ${(props) => props.size};\r\n  height: ${(props) => props.size};\r\n  border: ${(props) => props.borderSize} solid white;\r\n  border-top: ${(props) => props.borderSize} solid transparent;\r\n  border-bottom: ${(props) => props.borderSize} solid transparent;\r\n  border-radius: 100rem;\r\n  display: inline-block;\r\n  animation: spinner 1s infinite linear;\r\n  @keyframes spinner {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\nconst LoadingSpinner = ({ size = \"40px\", borderSize = \"5px\" }) => {\r\n  return <LoadingStyles size={size} borderSize={borderSize}></LoadingStyles>;\r\n};\r\n\r\nexport default LoadingSpinner;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoadingSpinner from \"../Loading/LoadingSpinner\";\r\n\r\nconst ButtonStyles = styled.button`\r\n  cursor: pointer;\r\n  padding: 0 25px;\r\n  line-height: 1;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  height: ${(props) => props.height || \"45px\"};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${(props) =>\r\n    props.kind === \"secondary\" &&\r\n    css`\r\n      color: ${(props) => props.theme.primary};\r\n      background-color: white;\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"primary\" &&\r\n    css`\r\n      color: white;\r\n      background-image: linear-gradient(\r\n        to right bottom,\r\n        ${(props) => props.theme.primary},\r\n        ${(props) => props.theme.secondary}\r\n      );\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"ghost\" &&\r\n    css`\r\n      color: ${(props) => props.theme.grayLight};\r\n      background-color: var(--clr-primary-5);\r\n      border: none;\r\n      width: 100%;\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"ship\" &&\r\n    css`\r\n      color: ${(props) => props.theme.grayLight};\r\n      background-color: var(--clr-primary-5);\r\n      border: none;\r\n      width: 50%;\r\n    `};\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n/**\r\n * @param {*} onClick Handler onClick\r\n * @requires\r\n * @param {string} type Type of button 'button' | 'submit'\r\n */\r\nconst Button = ({\r\n  type = \"button\",\r\n  onClick = () => {},\r\n  children,\r\n  kind = \"primary\",\r\n  ...props\r\n}) => {\r\n  const { isLoading, to } = props;\r\n  const child = !!isLoading ? <LoadingSpinner></LoadingSpinner> : children;\r\n  if (to !== \"\" && typeof to === \"string\") {\r\n    return (\r\n      <NavLink\r\n        to={to}\r\n        style={{\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        <ButtonStyles type={type} kind={kind} {...props}>\r\n          {child}\r\n        </ButtonStyles>\r\n      </NavLink>\r\n    );\r\n  }\r\n  return (\r\n    <ButtonStyles type={type} kind={kind} onClick={onClick} {...props}>\r\n      {child}\r\n    </ButtonStyles>\r\n  );\r\n};\r\n\r\nButton.prototype = {\r\n  type: PropTypes.oneOf([\"button\", \"submit\"]),\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  kind: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n  to: PropTypes.oneOf([\"primary\", \"secondary\", \"ghost\"]),\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst FieldStyles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  row-gap: 20px;\r\n  margin-bottom: 40px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\nconst Field = ({ children }) => {\r\n  return <FieldStyles>{children}</FieldStyles>;\r\n};\r\n\r\nexport default Field;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useController } from \"react-hook-form\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InputStyles = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  input {\r\n    width: 100%;\r\n    padding: ${(props) => (props.hasIcon ? \"10px 60px 10px 20px\" : \"10px\")};\r\n    background-color: ${(props) => props.theme.grayLight};\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n    transition: all 0.2s linear;\r\n    border: 1px solid transparent;\r\n    outline: none;\r\n  }\r\n  input:focus {\r\n    background-color: white;\r\n    border-color: var(--clr-primary-1);\r\n  }\r\n  input::-webkit-input-placeholder {\r\n    color: #84878b;\r\n  }\r\n  input::-moz-input-placeholder {\r\n    color: #84878b;\r\n  }\r\n  .input-icon {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n  }\r\n  @media only screen and (max-width: 740px) {\r\n    input {\r\n      padding: 12px;\r\n    }\r\n    input::-webkit-input-placeholder {\r\n      font-size: 12px;\r\n    }\r\n    input::-moz-input-placeholder {\r\n      color: #84878b;\r\n    }\r\n  }\r\n`;\r\nconst Input = ({\r\n  name = \"\",\r\n  type = \"text\",\r\n  children,\r\n  value,\r\n  control,\r\n  ...props\r\n}) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <InputStyles hasIcon={children ? true : false}>\r\n      <input id={name} type={type} {...field} {...props} />\r\n      {children ? <div className=\"input-icon\">{children}</div> : null}\r\n    </InputStyles>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  children: PropTypes.any,\r\n  control: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LabelStyles = styled.label`\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Label = ({ htmlFor = \"\", children, ...props }) => {\r\n  return (\r\n    <LabelStyles htmlFor={htmlFor} {...props}>\r\n      {children}\r\n    </LabelStyles>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  htmlFor: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst HeadingStyles = styled.h2`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 28px;\r\n  margin-bottom: 55px;\r\n  color: var(--clr-primary-5);\r\n  @media only screen and (max-width: 740px) {\r\n    font-size: 20px;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\nconst Heading = ({ className = \"\", children }) => {\r\n  return <HeadingStyles className={className}>{children}</HeadingStyles>;\r\n};\r\n\r\nexport default Heading;\r\n","const initialState = {\r\n  loadingUpdate: false,\r\n};\r\n\r\nconst reducerUpdate = (state, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_REQUEST\":\r\n      return { ...state, loadingUpdate: true };\r\n    case \"UPDATE_SUCCESS\":\r\n      return { ...state, loadingUpdate: false };\r\n    case \"UPDATE_FAIL\":\r\n      return { ...state, loadingUpdate: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { initialState, reducerUpdate };\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../Components/button/Button\";\r\nimport Field from \"../Components/field/Field\";\r\nimport Input from \"../Components/input/Input\";\r\nimport Label from \"../Components/label/Label\";\r\nimport { useStore } from \"../Context/Store-Context\";\r\nimport { initialState, reducerUpdate } from \"../Reducer/reducerUpdate\";\r\nimport Swal from \"sweetalert2\";\r\nimport Heading from \"../Layout/Heading\";\r\nimport LoadingBox from \"../Components/Loading/LoadingBox\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 100vh;\r\n  padding: 40px;\r\n  .form {\r\n    max-width: 400px;\r\n    margin: 50px auto;\r\n  }\r\n`;\r\nconst ProfileScreen = () => {\r\n  const { state, dispatch: ctxDispatch } = useStore();\r\n  const { userInfo } = state;\r\n\r\n  const [{ loadingUpdate }, dispatch] = useReducer(reducerUpdate, initialState);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { isSubmitting },\r\n  } = useForm({\r\n    defaultValues: {},\r\n  });\r\n\r\n  //reset các giá trị values\r\n  useEffect(() => {\r\n    reset({ name: userInfo.name, email: userInfo.email });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  //hàm update profile\r\n  const handleUpdateProfile = async (values) => {\r\n    //check password === confirmPassword\r\n    if (values.password !== values.confirmPassword) {\r\n      Swal.fire(\"Failed\", \"Confirm Password Failed\", \"warning\");\r\n      return;\r\n    }\r\n    try {\r\n      //update tài khoản với api update được tạo ở backend\r\n      //PUT – Update: Cập nhật dữ liệu\r\n      const { data } = await axios.put(\r\n        \"/api/users/profile\",\r\n        {\r\n          name: values.name,\r\n          email: values.email,\r\n          password: values.password,\r\n          confirmPassword: values.confirmPassword,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      //setState sau khi update sẽ cập nhật thẳng vào api sign in\r\n      dispatch({ type: \"UPDATE_SUCCESS\" });\r\n      ctxDispatch({ type: \"USER_SIGNIN\", payload: data });\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"update success\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: \"FETCH_FAIL\",\r\n      });\r\n      Swal.fire(\"Failed\", \"Update Failed\", \"danger\");\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Heading>Thông Tin Tài Khoản</Heading>\r\n      <form className=\"form\" onSubmit={handleSubmit(handleUpdateProfile)}>\r\n        <Field>\r\n          <Label htmlFor=\"name\">Tên</Label>\r\n          <Input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Nhập Tên\"\r\n            required\r\n            control={control}\r\n          ></Input>\r\n        </Field>\r\n        <Field>\r\n          <Label htmlFor=\"email\">Email</Label>\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Nhập Email\"\r\n            required\r\n            control={control}\r\n          ></Input>\r\n        </Field>\r\n        <Field>\r\n          <Label htmlFor=\"password\">Mật Khẩu</Label>\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Nhập Mật Khẩu\"\r\n            required\r\n            control={control}\r\n          ></Input>\r\n        </Field>\r\n        <Field>\r\n          <Label htmlFor=\"confirmPassword\">Xác Nhận Mật Khẩu</Label>\r\n          <Input\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            placeholder=\"Nhập Lại Mật Khẩu\"\r\n            required\r\n            control={control}\r\n          ></Input>\r\n        </Field>\r\n        <Button\r\n          type=\"submit\"\r\n          kind=\"ghost\"\r\n          isLoading={isSubmitting}\r\n          disabled={isSubmitting}\r\n        >\r\n          Xác Nhận\r\n        </Button>\r\n        {loadingUpdate && <LoadingBox />}\r\n      </form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n"],"names":["Spinner","React","ref","bsPrefix","variant","animation","size","as","Component","className","props","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName","LoadingBox","role","LoadingStyles","styled","borderSize","ButtonStyles","height","kind","css","theme","primary","secondary","grayLight","Button","type","onClick","children","isLoading","to","child","NavLink","style","display","prototype","PropTypes","FieldStyles","InputStyles","hasIcon","name","control","value","field","useController","defaultValue","id","LabelStyles","htmlFor","HeadingStyles","initialState","loadingUpdate","reducerUpdate","state","action","Wrapper","useStore","ctxDispatch","dispatch","userInfo","useReducer","useForm","defaultValues","handleSubmit","reset","isSubmitting","formState","useEffect","email","handleUpdateProfile","values","password","confirmPassword","Swal","axios","headers","Authorization","token","data","payload","position","icon","title","showConfirmButton","timer","Heading","onSubmit","Field","Label","Input","placeholder","required","disabled"],"sourceRoot":""}