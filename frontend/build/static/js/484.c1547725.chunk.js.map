{"version":3,"file":"static/js/484.c1547725.chunk.js","mappings":"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","sources":["Components/Loading/Loading.js","Components/MessageBox.js","Reducer/useReducerOrder.js","Components/Order/OrderShipping.js","Components/Order/OrderPayment.js","Components/Order/OrderItem.js","Components/Order/OrderProceed.js","Screen/OrderScreen.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className='section secton-center'>\r\n      <div className='loading'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading","import Alert from \"react-bootstrap/Alert\";\r\n\r\nexport default function MessageBox(props) {\r\n  return <Alert variant={props.variant || \"info\"}>{props.children}</Alert>;\r\n}\r\n","//quản lý danh sách lịch sử đặt hàng\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_REQUEST\":\r\n      return { ...state, loading: true, error: \"\" };\r\n    case \"FETCH_SUCCESS\":\r\n      return { ...state, loading: false, order: action.payload, error: \"\" };\r\n    case \"FETCH_FAIL\":\r\n      return { ...state, loading: false, error: action.payload };\r\n    case \"PAY_REQUEST\":\r\n      return { ...state, loadingPay: true };\r\n    case \"PAY_SUCCESS\":\r\n      return { ...state, loadingPay: false, successPay: true };\r\n    case \"PAY_FAIL\":\r\n      return { ...state, loadingPay: false };\r\n    case \"PAY_RESET\":\r\n      return { ...state, loadingPay: false, successPay: false };\r\n    //xác nhận giao hàng\r\n    case \"DELIVER_REQUEST\":\r\n      return { ...state, loadingDeliver: true };\r\n    case \"DELIVER_SUCCESS\":\r\n      return { ...state, loadingDeliver: false, successDeliver: true };\r\n    case \"DELIVER_FAIL\":\r\n      return { ...state, loadingDeliver: false };\r\n    case \"DELIVER_RESET\":\r\n      return {\r\n        ...state,\r\n        loadingDeliver: false,\r\n        successDeliver: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  order: {},\r\n  error: \"\",\r\n  successPay: false,\r\n  loadingPay: false,\r\n};\r\n\r\nexport { initialState, reducer };\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport MessageBox from \"../MessageBox\";\r\n\r\nconst OrderShipping = ({ order }) => {\r\n  return (\r\n    <Card.Body>\r\n      <Card.Title>Đơn Hàng</Card.Title>\r\n      <Card.Text>\r\n        <strong>Sản Phẩm:</strong> {order.shippingAddress.fullName} <br />\r\n        <strong>Địa Chỉ: </strong> {order.shippingAddress.address}\r\n        {order.shippingAddress.city}, {order.shippingAddress.postalCode},\r\n        {order.shippingAddress.country}\r\n      </Card.Text>\r\n      {order.isDelivered ? (\r\n        <MessageBox variant=\"success\">\r\n          Đang Giao Hàng {order.deliveredAt}\r\n        </MessageBox>\r\n      ) : (\r\n        <MessageBox variant=\"danger\">Chưa Giao Hàng</MessageBox>\r\n      )}\r\n    </Card.Body>\r\n  );\r\n};\r\n\r\nexport default OrderShipping;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport MessageBox from \"../MessageBox\";\r\n\r\nconst OrderPayment = ({order}) => {\r\n  return (\r\n    <Card.Body>\r\n      <Card.Title>Thanh Toán</Card.Title>\r\n      <Card.Text>\r\n        <strong>Phương Thức:</strong> {order.paymentMethod}\r\n      </Card.Text>\r\n      {order.isPaid ? (\r\n        <MessageBox variant=\"success\">Đã Thanh Toán {order.paidAt}</MessageBox>\r\n      ) : (\r\n        <MessageBox variant=\"danger\">Chưa Thanh Toán</MessageBox>\r\n      )}\r\n    </Card.Body>\r\n  );\r\n};\r\n\r\nexport default OrderPayment;\r\n","import React from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst OrderItem = ({ order }) => {\r\n  return (\r\n    <Card.Body>\r\n      <Card.Title>Sản Phẩm</Card.Title>\r\n      <ListGroup variant=\"flush\">\r\n        {order.orderItems.map((item) => (\r\n          <ListGroup.Item key={item._id}>\r\n            <Row className=\"align-items-center\">\r\n              <Col md={6}>\r\n                <img src={item.image} alt={item.name} className=\"image\"></img>{\" \"}\r\n                <Link to={`/product/${item.slug}`}>{item.name}</Link>\r\n              </Col>\r\n              <Col md={3}>\r\n                <span>{item.quantity}</span>\r\n              </Col>\r\n              <Col md={3}>${item.price}</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Card.Body>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","import React from \"react\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport { useStore } from \"../../Context/Store-Context\";\r\nimport Button from \"../button/Button\";\r\n\r\nconst OrderProceed = ({\r\n  order,\r\n  isPending,\r\n  loadingPay,\r\n  createOrder,\r\n  onApprove,\r\n  onError,\r\n  deliverOrderHandler,\r\n  loadingDeliver,\r\n}) => {\r\n  const { state } = useStore();\r\n  const { userInfo } = state;\r\n  return (\r\n    <Card.Body>\r\n      <Card.Title>Thành Tiền</Card.Title>\r\n      <ListGroup variant=\"flush\">\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col>Tiền hàng</Col>\r\n            <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col>Phí vận chuyển</Col>\r\n            <Col>${order.shippingPrice.toFixed(2)}</Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col>Thuế</Col>\r\n            <Col>${order.taxPrice.toFixed(2)}</Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <Row>\r\n            <Col>\r\n              <strong>Tổng cộng</strong>\r\n            </Col>\r\n            <Col>\r\n              <strong>${order.totalPrice.toFixed(2)}</strong>\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n        {!order.isPaid && (\r\n          <ListGroup.Item>\r\n            {isPending ? (\r\n              <Loading />\r\n            ) : (\r\n              <div>\r\n                <PayPalButtons\r\n                  createOrder={createOrder}\r\n                  onApprove={onApprove}\r\n                  onError={onError}\r\n                ></PayPalButtons>\r\n              </div>\r\n            )}\r\n            {loadingPay && <Loading></Loading>}\r\n          </ListGroup.Item>\r\n        )}\r\n        {/* xác nhận giao hàng */}\r\n        {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n          <ListGroup.Item>\r\n            <div className=\"d-grid\">\r\n              <Button\r\n                type=\"button\"\r\n                kind=\"ghost\"\r\n                onClick={deliverOrderHandler}\r\n                isLoading={loadingDeliver}\r\n              >\r\n                Xác Nhận Giao Hàng\r\n              </Button>\r\n            </div>\r\n          </ListGroup.Item>\r\n        )}\r\n      </ListGroup>\r\n    </Card.Body>\r\n  );\r\n};\r\n\r\nexport default OrderProceed;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useReducer } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useStore } from \"../Context/Store-Context\";\r\nimport Loading from \"../Components/Loading/Loading\";\r\nimport MessageBox from \"../Components/MessageBox\";\r\nimport { getError } from \"../Util/constanst\";\r\nimport { initialState, reducer } from \"../Reducer/useReducerOrder\";\r\nimport styled from \"styled-components\";\r\nimport OrderShipping from \"../Components/Order/OrderShipping\";\r\nimport OrderPayment from \"../Components/Order/OrderPayment\";\r\nimport OrderItem from \"../Components/Order/OrderItem\";\r\nimport OrderProceed from \"../Components/Order/OrderProceed\";\r\nimport { usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\r\nimport Swal from \"sweetalert2\";\r\nimport Heading from \"../Layout/Heading\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 100vh;\r\n  padding: 40px;\r\n  .image {\r\n    width: 50px;\r\n    height: 50px;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nconst OrderScreen = () => {\r\n  const { state } = useStore();\r\n  const { userInfo } = state;\r\n\r\n  //lấy id của đơn hàng thanh toán\r\n  const params = useParams();\r\n  const { id: orderId } = params;\r\n  const navigate = useNavigate();\r\n\r\n  //lấy từ useReducerOrder\r\n  const [\r\n    {\r\n      loading,\r\n      error,\r\n      order,\r\n      successPay,\r\n      loadingPay,\r\n      loadingDeliver,\r\n      successDeliver,\r\n    },\r\n    dispatch,\r\n  ] = useReducer(reducer, initialState);\r\n\r\n  //tạo reducer của PayPal\r\n  const [{ isPending }, paypalDispatch] = usePayPalScriptReducer();\r\n\r\n  //hàm xử lý \"tạo đơn hàng bằng paypal\"\r\n  const createOrder = (data, actions) => {\r\n    return actions.order\r\n      .create({\r\n        purchase_units: [\r\n          {\r\n            amount: { value: order.totalPrice },\r\n          },\r\n        ],\r\n      })\r\n      .then((orderID) => {\r\n        return orderID;\r\n      });\r\n  };\r\n\r\n  //hàm xử lý \"phê duyệt\" đơn hàng\r\n  const onApprove = (data, actions) => {\r\n    return actions.order.capture().then(async function (details) {\r\n      try {\r\n        dispatch({ type: \"PAY_REQUEST\" });\r\n        //để sửa dữ liệu thì bạn cần dùng method PUT hoặc PATCH\r\n        //PUT – Update: Cập nhật dữ liệu\r\n        const { data } = await axios.put(\r\n          `/api/orders/${order._id}/pay`,\r\n          details,\r\n          {\r\n            headers: { authorization: `Bearer ${userInfo.token}` },\r\n          }\r\n        );\r\n        dispatch({ type: \"PAY_SUCCESS\", payload: data });\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"success\",\r\n          title: \"Thành Công\",\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      } catch (err) {\r\n        dispatch({ type: \"PAY_FAIL\", payload: getError(err) });\r\n        Swal.fire(\"Failed\", \"error\", \"warning\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //hàm xử lý lỗi\r\n  const onError = (err) => {\r\n    console.log(getError(err));\r\n  };\r\n\r\n  //xử lý logic hiển thị  đơn hàng trả về\r\n  useEffect(() => {\r\n    const fetchOrder = async () => {\r\n      try {\r\n        dispatch({ type: \"FETCH_REQUEST\" });\r\n        //lấy dũ liệu từ api order trả về thông tin đã thanh toán từ api order\r\n        // để lấy ra list dữ liệu, bạn cần gửi request lên server với method GET\r\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: data });\r\n      } catch (err) {\r\n        dispatch({ type: \"FETCH_FAIL\", payload: getError(err) });\r\n      }\r\n    };\r\n\r\n    if (!userInfo) {\r\n      return navigate(\"/signin\");\r\n    }\r\n    //điều kiện tránh trùng id người dùng khi có hóa đơn trùng nhau\r\n    if (\r\n      !order._id ||\r\n      successPay ||\r\n      successDeliver ||\r\n      (order._id && order._id !== orderId)\r\n    ) {\r\n      fetchOrder();\r\n      if (successPay) {\r\n        dispatch({ type: \"PAY_RESET\" });\r\n      }\r\n      if (successDeliver) {\r\n        dispatch({ type: \"DELIVER_RESET\" });\r\n      }\r\n    } else {\r\n      const loadPaypalScript = async () => {\r\n        const { data: clientId } = await axios.get(\"/api/keys/paypal\", {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        paypalDispatch({\r\n          type: \"resetOptions\",\r\n          value: {\r\n            \"client-id\": clientId,\r\n            currency: \"USD\",\r\n          },\r\n        });\r\n        paypalDispatch({ type: \"setLoadingStatus\", value: \"pending\" });\r\n      };\r\n      loadPaypalScript();\r\n    }\r\n  }, [\r\n    order,\r\n    userInfo,\r\n    orderId,\r\n    navigate,\r\n    paypalDispatch,\r\n    successPay,\r\n    successDeliver,\r\n  ]);\r\n\r\n  //logic xử lý xác nhận giao hàng\r\n  const deliverOrderHandler = async () => {\r\n    try {\r\n      dispatch({ type: \"DELIVER_REQUEST\" });\r\n      const { data } = await axios.put(\r\n        `/api/orders/${order._id}/deliver`,\r\n        {},\r\n        {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({ type: \"DELIVER_SUCCESS\", payload: data });\r\n      Swal.fire(\"Sản Phẩm Mới!\", \"Giao Hàng Thành Công\", \"success\");\r\n    } catch (err) {\r\n      toast.error(getError(err));\r\n      dispatch({ type: \"DELIVER_FAIL\" });\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <Loading></Loading>\r\n  ) : error ? (\r\n    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n  ) : (\r\n    <Wrapper>\r\n      <Heading>Đơn Hàng {orderId}</Heading>\r\n      <Row>\r\n        <Col md={8}>\r\n          <Card className=\"mb-3\">\r\n            {/* component orderShipping */}\r\n            <OrderShipping order={order} />\r\n          </Card>\r\n          <Card className=\"mb-3\">\r\n            {/* component payment */}\r\n            <OrderPayment order={order} />\r\n          </Card>\r\n          <Card className=\"mb-3\">\r\n            {/* component OrderItem */}\r\n            <OrderItem order={order} />\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className=\"mb-3\">\r\n            {/* component OrderProceed */}\r\n            <OrderProceed\r\n              order={order}\r\n              isPending={isPending}\r\n              loadingPay={loadingPay}\r\n              createOrder={createOrder}\r\n              onApprove={onApprove}\r\n              onError={onError}\r\n              deliverOrderHandler={deliverOrderHandler}\r\n              loadingDeliver={loadingDeliver}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n"],"names":["className","MessageBox","props","variant","children","reducer","state","action","type","loading","error","order","payload","loadingPay","successPay","loadingDeliver","successDeliver","initialState","Card","shippingAddress","fullName","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","isPaid","paidAt","ListGroup","orderItems","map","item","Row","Col","md","src","image","alt","name","Link","to","slug","quantity","price","_id","isPending","createOrder","onApprove","onError","deliverOrderHandler","userInfo","useStore","itemsPrice","toFixed","shippingPrice","taxPrice","totalPrice","Loading","isAdmin","Button","kind","onClick","isLoading","Wrapper","styled","orderId","useParams","id","navigate","useNavigate","useReducer","dispatch","usePayPalScriptReducer","paypalDispatch","useEffect","fetchOrder","axios","headers","authorization","token","data","getError","loadPaypalScript","clientId","value","currency","Swal","toast","Heading","actions","create","purchase_units","amount","then","orderID","capture","details","position","icon","title","showConfirmButton","timer","err","console","log"],"sourceRoot":""}