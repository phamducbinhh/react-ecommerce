{"version":3,"file":"static/js/107.9cc04964.chunk.js","mappings":"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","sources":["Components/Loading/LoadingSpinner.js","Components/button/Button.js","Components/field/Field.js","Components/input/Input.js","Components/label/Label.js","Layout/Heading.js","Screen/SignUpScreen.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst LoadingStyles = styled.div`\r\n  width: ${(props) => props.size};\r\n  height: ${(props) => props.size};\r\n  border: ${(props) => props.borderSize} solid white;\r\n  border-top: ${(props) => props.borderSize} solid transparent;\r\n  border-bottom: ${(props) => props.borderSize} solid transparent;\r\n  border-radius: 100rem;\r\n  display: inline-block;\r\n  animation: spinner 1s infinite linear;\r\n  @keyframes spinner {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\nconst LoadingSpinner = ({ size = \"40px\", borderSize = \"5px\" }) => {\r\n  return <LoadingStyles size={size} borderSize={borderSize}></LoadingStyles>;\r\n};\r\n\r\nexport default LoadingSpinner;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport LoadingSpinner from \"../Loading/LoadingSpinner\";\r\n\r\nconst ButtonStyles = styled.button`\r\n  cursor: pointer;\r\n  padding: 0 25px;\r\n  line-height: 1;\r\n  border-radius: 8px;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  height: ${(props) => props.height || \"45px\"};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${(props) =>\r\n    props.kind === \"secondary\" &&\r\n    css`\r\n      color: ${(props) => props.theme.primary};\r\n      background-color: white;\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"primary\" &&\r\n    css`\r\n      color: white;\r\n      background-image: linear-gradient(\r\n        to right bottom,\r\n        ${(props) => props.theme.primary},\r\n        ${(props) => props.theme.secondary}\r\n      );\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"ghost\" &&\r\n    css`\r\n      color: ${(props) => props.theme.grayLight};\r\n      background-color: var(--clr-primary-5);\r\n      border: none;\r\n      width: 100%;\r\n    `};\r\n  ${(props) =>\r\n    props.kind === \"ship\" &&\r\n    css`\r\n      color: ${(props) => props.theme.grayLight};\r\n      background-color: var(--clr-primary-5);\r\n      border: none;\r\n      width: 50%;\r\n    `};\r\n  &:disabled {\r\n    opacity: 0.5;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n/**\r\n * @param {*} onClick Handler onClick\r\n * @requires\r\n * @param {string} type Type of button 'button' | 'submit'\r\n */\r\nconst Button = ({\r\n  type = \"button\",\r\n  onClick = () => {},\r\n  children,\r\n  kind = \"primary\",\r\n  ...props\r\n}) => {\r\n  const { isLoading, to } = props;\r\n  const child = !!isLoading ? <LoadingSpinner></LoadingSpinner> : children;\r\n  if (to !== \"\" && typeof to === \"string\") {\r\n    return (\r\n      <NavLink\r\n        to={to}\r\n        style={{\r\n          display: \"inline-block\",\r\n        }}\r\n      >\r\n        <ButtonStyles type={type} kind={kind} {...props}>\r\n          {child}\r\n        </ButtonStyles>\r\n      </NavLink>\r\n    );\r\n  }\r\n  return (\r\n    <ButtonStyles type={type} kind={kind} onClick={onClick} {...props}>\r\n      {child}\r\n    </ButtonStyles>\r\n  );\r\n};\r\n\r\nButton.prototype = {\r\n  type: PropTypes.oneOf([\"button\", \"submit\"]),\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n  kind: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n  to: PropTypes.oneOf([\"primary\", \"secondary\", \"ghost\"]),\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst FieldStyles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  row-gap: 20px;\r\n  margin-bottom: 40px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\nconst Field = ({ children }) => {\r\n  return <FieldStyles>{children}</FieldStyles>;\r\n};\r\n\r\nexport default Field;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useController } from \"react-hook-form\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst InputStyles = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  input {\r\n    width: 100%;\r\n    padding: ${(props) => (props.hasIcon ? \"10px 60px 10px 20px\" : \"10px\")};\r\n    background-color: ${(props) => props.theme.grayLight};\r\n    border-radius: 8px;\r\n    font-weight: 500;\r\n    transition: all 0.2s linear;\r\n    border: 1px solid transparent;\r\n    outline: none;\r\n  }\r\n  input:focus {\r\n    background-color: white;\r\n    border-color: var(--clr-primary-1);\r\n  }\r\n  input::-webkit-input-placeholder {\r\n    color: #84878b;\r\n  }\r\n  input::-moz-input-placeholder {\r\n    color: #84878b;\r\n  }\r\n  .input-icon {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n  }\r\n  @media only screen and (max-width: 740px) {\r\n    input {\r\n      padding: 12px;\r\n    }\r\n    input::-webkit-input-placeholder {\r\n      font-size: 12px;\r\n    }\r\n    input::-moz-input-placeholder {\r\n      color: #84878b;\r\n    }\r\n  }\r\n`;\r\nconst Input = ({\r\n  name = \"\",\r\n  type = \"text\",\r\n  children,\r\n  value,\r\n  control,\r\n  ...props\r\n}) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <InputStyles hasIcon={children ? true : false}>\r\n      <input id={name} type={type} {...field} {...props} />\r\n      {children ? <div className=\"input-icon\">{children}</div> : null}\r\n    </InputStyles>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  children: PropTypes.any,\r\n  control: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LabelStyles = styled.label`\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Label = ({ htmlFor = \"\", children, ...props }) => {\r\n  return (\r\n    <LabelStyles htmlFor={htmlFor} {...props}>\r\n      {children}\r\n    </LabelStyles>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  htmlFor: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst HeadingStyles = styled.h2`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 28px;\r\n  margin-bottom: 55px;\r\n  color: var(--clr-primary-5);\r\n  @media only screen and (max-width: 740px) {\r\n    font-size: 20px;\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\nconst Heading = ({ className = \"\", children }) => {\r\n  return <HeadingStyles className={className}>{children}</HeadingStyles>;\r\n};\r\n\r\nexport default Heading;\r\n","import Axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport Swal from \"sweetalert2\";\r\nimport Button from \"../Components/button/Button\";\r\nimport Field from \"../Components/field/Field\";\r\nimport Input from \"../Components/input/Input\";\r\nimport Label from \"../Components/label/Label\";\r\nimport { useStore } from \"../Context/Store-Context\";\r\nimport Heading from \"../Layout/Heading\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 100vh;\r\n  padding: 40px;\r\n  .form {\r\n    max-width: 800px;\r\n    margin: 50px auto;\r\n  }\r\n`;\r\n\r\nconst SignUpScreen = () => {\r\n  const navigate = useNavigate();\r\n  const { dispatch } = useStore();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = useForm();\r\n\r\n  //hàm đăng ký tài khoản\r\n  const handleSignUp = async (values) => {\r\n    //check password === confirmPassword\r\n    if (values.password !== values.confirmPassword) {\r\n      Swal.fire(\"Failed\", \"Confirm Password Failed\", \"warning\");\r\n      return;\r\n    }\r\n    try {\r\n      //đăng ký tài khoản gửi lên api bao gồm các thông tin name,email,password\r\n      //để lưu dữ liệu, bạn cần gửi request lên server với method POST\r\n      const { data } = await Axios.post(\"/api/users/signup\", {\r\n        //tương tự setName(e.target.name)\r\n        name: values.name,\r\n        email: values.email,\r\n        password: values.password,\r\n      });\r\n      // thực hiện hành động tương tự setState(result.data)\r\n      dispatch({ type: \"USER_SIGNIN\", payload: data });\r\n      Swal.fire({\r\n        position: \"center\",\r\n        icon: \"success\",\r\n        title: \"Đăng Nhập Thành Công\",\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n      });\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      toast.error(err.message, {\r\n        pauseOnHover: false,\r\n        delay: 0,\r\n      });\r\n      Swal.fire(\"Failed\", \"Login Failed\", \"warning\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading>Đăng Ký Tài Khoản</Heading>\r\n      <form className=\"form\" onSubmit={handleSubmit(handleSignUp)}>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label htmlFor=\"name\">Tên</Label>\r\n            <Input\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Nhập Tên\"\r\n              required\r\n              control={control}\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label htmlFor=\"email\">Email</Label>\r\n            <Input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Nhập Email\"\r\n              required\r\n              control={control}\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label htmlFor=\"password\">Mật Khẩu</Label>\r\n            <Input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Nhập Mật Khẩu\"\r\n              control={control}\r\n              required\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label htmlFor=\"confirmPassword\">Xác Nhận Mật Khẩu</Label>\r\n            <Input\r\n              name=\"confirmPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Nhập Lại Mật Khẩu\"\r\n              required\r\n              control={control}\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"flex justify-between w-full mx-auto\">\r\n          <div className=\"mb-4 font-semibold text-gray-800\">\r\n            Bạn Đã Có Tài Khoản?{\" \"}\r\n            <NavLink to={\"/signin\"} className=\"font-bold text-primary\">\r\n              Đăng Nhập\r\n            </NavLink>{\" \"}\r\n          </div>\r\n          <Button\r\n            type=\"submit\"\r\n            kind=\"ship\"\r\n            isLoading={isSubmitting}\r\n            disabled={isSubmitting}\r\n          >\r\n            Đăng Ký\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SignUpScreen;\r\n"],"names":["LoadingStyles","styled","props","size","borderSize","ButtonStyles","height","kind","css","theme","primary","secondary","grayLight","Button","type","onClick","children","isLoading","to","child","NavLink","style","display","prototype","PropTypes","FieldStyles","InputStyles","hasIcon","name","control","value","field","useController","defaultValue","id","className","LabelStyles","htmlFor","HeadingStyles","Wrapper","navigate","useNavigate","dispatch","useStore","useForm","handleSubmit","isSubmitting","formState","handleSignUp","values","password","confirmPassword","Swal","Axios","email","data","payload","position","icon","title","showConfirmButton","timer","toast","message","pauseOnHover","delay","onSubmit","placeholder","required","disabled"],"sourceRoot":""}